# Gramática de if/then/else com expressões e atribuição
%Terminals: if then else id num = ; + * ( )
# Regra de precedência/associatividade: '+' tem menor que '*'; 'else' favorece shift (liga ao 'then' mais próximo)
%Left +
%Left *
%Right else
%NonTerminals: S StmtList Stmt E E' T T' F
%Start: S
%Productions:
# Programa simples: lista de statements separados por ';'
S        -> StmtList
StmtList -> Stmt ; StmtList | Stmt

# Regras para statements: atribuição e if-then[-else]
# Observação: esta forma com 'else' opcional é a clássica do 'dangling else' e pode gerar conflitos em LL(1)/SLR(1).
Stmt     -> id = E | if E then Stmt | if E then Stmt else Stmt

# Expressões aritméticas
E   -> T E'
E'  -> + T E' | ε
T   -> F T'
T'  -> * F T' | ε
F   -> ( E ) | id | num
